def create_edit_sbl_modal():
    """edit the SBL record modal

    Returns:
        _type_: _description_
    """
    # Modal for Creating New SBL
    status = ["Open", "KIV", "NEW", "CLOSE"]
    sbl_status_options = [{'label': status, 'value': status} for status in status]
    fit_status = ["Open", "Close"]
    fit_status_options = [{'label': status, 'value': status} for status in fit_status]
    sba_type = ["EDS", "EDS Logic", "FT"]
    process_options = ["TEST", "Process", "Equipment", "Device"]
    return fac.AntdModal(
        [
            # SBA type 
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('SBA Type:')], span=2),
                fac.AntdCol([fac.AntdSelect(id="edit-sba-type", placeholder="", options=sba_type, style={'width': '100%'})], span=10),
                fac.AntdCol([fac.AntdText('Status:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol([fac.AntdSelect(id="edit-status", placeholder="Select SBA Status", options=status, style={'width': '100%'})], span=10)
            ], style={'marginBottom': '10px'}),
            # SBA Date and Eval Date on the same row
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('SBA Date:')], span=2),
                fac.AntdCol([fac.AntdDatePicker(id='edit-sba-date', placeholder='Select SBA Date', locale='en-us', style={'width': '100%'},)], span=10),
                fac.AntdCol([fac.AntdText('Eval Date:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdDatePicker(id='edit-eval-date', placeholder='Select Eval Date', locale='en-us', style={'width': '100%'},), span=10),
            ], style={'marginBottom': '10px'}),

            # Product as Text Input
            # Bin as Text Input
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('Product:')], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-product', placeholder='Enter Product (e.g., Electron)'), span=4),
                fac.AntdCol([fac.AntdText('BIN:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-bin', placeholder='Enter Bin', style={'width': '100%'}), span=4),
                fac.AntdCol([fac.AntdText('BIN Group:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-bin-group', placeholder='Enter Bin Group'), span=4),
                fac.AntdCol([fac.AntdText('PGM/Process:', style={'marginLeft': '10px', 'fontSize':'12px'})], span=2),
                fac.AntdCol([fac.AntdSelect(id="edit-pgm-process", placeholder="", options=process_options, style={'width': '100%'})], span=4)
            ], style={'marginBottom': '10px'}),

            # SBA CNT and Hit Rate on the same row
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('SBA Qty:')],  span=2),
                fac.AntdCol(fac.AntdInputNumber(id='edit-sba-qty', placeholder='Enter SBA CNT', addonAfter='cnt', style={'width': '100%'}), span=4),
                fac.AntdCol([fac.AntdText('SBA Avg:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInputNumber(id='edit-sba-avg', placeholder='Enter SBA Avg', addonAfter='%', style={'width': '100%'}), span=4),
                fac.AntdCol([fac.AntdText('Hit Rate:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInputNumber(id='edit-hit-rate', placeholder='Enter Hit Rate', addonAfter='%', style={'width': '100%'}), span=4),
                fac.AntdCol([fac.AntdText('SBA Limit:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInputNumber(id='edit-sba-limit', placeholder='Enter SBA Limit', addonAfter='%', style={'width': '100%'}), span=4),
            ], style={'marginBottom': '10px'}),

            # assigned team, action owner, PE owner. 
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('Assign Team')], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-assigned-team', placeholder='Enter Team (e.g., PE,YA)'), span=4),
                fac.AntdCol([fac.AntdText('Action Owner:', style={'marginLeft': '10px', 'fontSize':'12px'})], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-action-owner', placeholder='Enter Owner (e.g., Jian Qiu)'), span=4),
                fac.AntdCol([fac.AntdText('YA Rep:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-ya-rep', placeholder='Enter Owner (e.g., Jian Qiu)'), span=4),
                fac.AntdCol(html.Label('PE Owner:', style={'marginRight': '10px', 'marginLeft': '10px'}), span=2),
                fac.AntdCol(fac.AntdInput(id='edit-pe-owner', placeholder='Enter PE Owner (e.g., Jian Qiu)'), span=4),
            ], style={'marginBottom': '10px'}),

            # FT item and owner 
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('Follow Up:')], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-follow-up', placeholder='Enter MRB/Fit/Yield Meeting...'), span=6),
                fac.AntdCol([fac.AntdText('Fit:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-fit-link', placeholder='Enter Fit (e.g., Electron)'), span=6),
                fac.AntdCol([fac.AntdText('Fit Status:', style={'marginLeft': '10px'})], span=2),
                fac.AntdCol([fac.AntdSelect(id="edit-fit-status", placeholder="Fit Status", options=fit_status_options, style={'width': '100%'},)], span=6)
            ], style={'marginBottom': '10px'}), 

            fac.AntdRow([
                fac.AntdCol(html.Label('Cause:', style={'marginRight': '10px'}), span=2),
                fac.AntdCol(fac.AntdInput(id='edit-root-cause', placeholder='Enter Root Cause', mode='text-area'), span=22),
            ], style={'marginBottom': '10px'}),

            # Test area for actions
            fac.AntdRow([
                fac.AntdCol(html.Label('Action Item:', style={'marginRight': '10px'}), span=2),
                fac.AntdCol(fac.AntdInput(id='edit-action-item', placeholder='Enter Action', mode='text-area'), span=22),
            ], style={'marginBottom': '10px'}),

            # Text area for Comment
            fac.AntdRow([
                fac.AntdCol([fac.AntdText('Comment:')], span=2),
                fac.AntdCol(fac.AntdInput(id='edit-comment', placeholder='Enter Comment'), span=22),
            ], style={'marginBottom': '10px'}),

            # Upload input for Map Image
            fac.AntdRow([
                fac.AntdCol(
                    [
                        fuc.FefferyDiv(
                            'Hover Ctrl + V Map Image',
                            id='edit-image-paste-container',
                            shadow='hover-shadow',
                            style={
                                'height': '140px',
                                'width': '100%',
                                'display': 'flex',
                                'justifyContent': 'center',
                                'alignItems': 'center',
                                'borderRadius': '6px',
                                'border': '3px dashed #FFBF00',
                                'fontSize': '10px',
                            },
                        ),
                        fuc.FefferyImagePaste(
                            id='edit-image-paste-demo',
                            disabled=True
                        ),
                    ],
                    span=3
                ),
                fac.AntdCol(
                    [
                        fuc.FefferyDiv(
                            [
                                fac.AntdImageGroup(
                                    id='edit-image-paste-output-group',
                                    children=[]  # Initially empty
                                ),
                            ], 
                            style={
                                'height': '140px',
                                'width': '100%',
                                'display': 'flex',
                                'justifyContent': 'center',
                                'alignItems': 'left',
                                'borderRadius': '6px',
                                'border': '1px solid #f0f0f0',
                                'marginLeft': '10px',
                                'marginRight': '20px'
                            })
                    ],span=9),
                fac.AntdCol(
                    [
                        fuc.FefferyDiv(
                            'Hover Ctrl + V Trend Image',
                            id='edit-trend-image-paste-container',
                            shadow='hover-shadow',
                            style={
                                'height': '140px',
                                'display': 'flex',
                                'justifyContent': 'center',
                                'alignItems': 'center',
                                'borderRadius': '6px',
                                'border': '3px dashed #FF4500',
                                'fontSize': '10px',
                            },
                        ),
                        fuc.FefferyImagePaste(
                            id='edit-trend-image-paste-demo',
                            disabled=True
                        ),
                    ],
                    span=3
                ),
                fac.AntdCol(
                    [
                        fuc.FefferyDiv(
                            [
                                fac.AntdImageGroup(
                                    id='edit-trend-image-paste-output-group',
                                    children=[]  # Initially empty
                                ),
                            ], 
                            style={
                                'height': '140px',
                                'display': 'flex',
                                'justifyContent': 'center',
                                'alignItems': 'left',
                                'borderRadius': '6px',
                                'border': '1px solid #f0f0f0',
                                'marginLeft': '10px',
                                'marginRight': '20px'
                            }),
                    ],span=9
                ),
            ], style={'marginBottom': '10px'}),
        ],
        id='modal-edit-sbl',
        title='Edit SBA Record',
        renderFooter=False,
        okText='Ok',
        cancelText='Cancel',
        width='80vw',
    )

from dash import html, callback, Input, Output, State, no_update, ALL, ctx, clientside_callback
from dash.exceptions import PreventUpdate
import feffery_antd_components as fac
import sqlite3
from config import DB_URL, TABLE_NAME_TABLE_ID_DICT
from utilities.data_process import query_sba_table_row_by_id, query_history_by_foreign_key, insert_record_to_history_table
import feffery_utils_components as fuc
import json 
import datetime 
def create_comment_history_page(row_id=48):
    """use sba row_id to identify the foregin_key for current records, and get the all the addtional comments info in the history table 
     and render the history to the comment layout. 
    Args:
        row_id (_type_): row id of sba_table

    Returns:
        _type_: return the html layout for the comment section 
    """
    # get the forign_key based on the input id 
    row = query_sba_table_row_by_id(row_id=row_id)
    # get the forigine key 
    # base on the foregine_key to get the access the hisotry_table info. 
    history_data_list = query_history_by_foreign_key(foreign_key=row['foreign_key'], sba_table_row_id=row_id)

    color_map = {"New": "blue", "Open": "green", "KIV": "grey", "Closed": "red"}
    timeline_items = []
    comments_items = []
    user_color_map = {}
    for history in history_data_list:
        timeline_items.append({
            "content": f"{history['status']} - {history['user']} - {history['user_action']} - {history['create_datetime']}",
            "color": color_map[history['status']]
        })

        if history['user'] is None or history['user'] == "":
            user = 'Unknown.User'
        else:
            user = history['user']
        
        if user not in user_color_map:
            # Generate a random HTML color for the user
            import random
            user_color_map[user] = "#{:06x}".format(random.randint(0, 0xFFFFFF))

        comments_items.append({
            'user': user,
            'time_value': history['create_datetime'],
            'comment': f'''Action: {history['action']}\nComments: {history['comment']}\nAddtional Comment:{history['content']}''',
            'avatar_text': user.split(".")[0][0].upper() + "." + user.split(".")[1][0].upper(),
            'avatar_color': user_color_map[user]
        })

        # crete a image groups if the image data is existing
        if history['content_image'] and history['content_image'] != "":
            # add a image group to the original data else return no group
            image_src_list =  json.load(history['content_image'])
            image_group = html.Div([
                fac.AntdImage(
                    src=[image_src for image_src in image_src_list],
                    multiImageMode='unfold',
                    height=80,
                )
            ])
        else:
            image_group = html.Div([])
        
        # Add the image group to the comments_items list
        comments_items[-1]['image_group'] = image_group

    return html.Div([
        fac.AntdRow([
            fac.AntdCol([
                fac.AntdCard([
                        fac.AntdSpace([fac.AntdTimeline(items=timeline_items,)],
                        direction='vertical',
                        style={'width': '100%',"height":"400px"},
                    ),
                    ], 
                    title=f'SBA Record Timeline {row_id}',
                    id='time-line-card'
                ),
                fac.AntdCard([
                    fac.AntdSpace([
                        fuc.FefferyDiv(
                            'Mouse Hover and Ctrl+V To Paste Image',
                            id='image-paste-history-container',
                            shadow='hover-shadow',
                            style={
                                'height': '40px',
                                'width': '100%',
                                'display': 'flex',
                                'justifyContent': 'center',
                                'alignItems': 'center',
                                'borderRadius': '6px',
                                'border': '3px dashed #FFBF00',
                                'marginBottom': '2px'
                            },
                            className='hover-shadow',
                        ),
                        fuc.FefferyImagePaste(id='image-paste-comments', disabled=True),
                        fuc.FefferyDiv(
                            [
                                fac.AntdImageGroup(
                                    id='image-paste-output-group',
                                    children=[]  # Initially empty
                                ),
                            ], 
                            style={
                                'height': '120px',
                                'width': '100%',
                                'display': 'flex',
                                'justifyContent': 'center',
                                'alignItems': 'left',
                                'borderRadius': '6px',
                                'border': '1px solid #f0f0f0',
                            },),
                    ],
                    direction='vertical', style={'width':'100%'})

                ], headStyle={"display": "None"},)
            ], span=8),
            fac.AntdCol([
                fac.AntdSpace([
                    fac.AntdCard([
                        fac.AntdSpace([
                            fac.AntdComment(
                                authorName=f"{item['user']}",
                                publishTime={
                                    'value': f"{item['time_value']}",
                                    'format': 'YYYY-MM-DD hh:mm:ss',
                                },
                                commentContent=item['comment'],
                                locale='en-us',
                                showLikeDislike = False,
                                showReply=False, 
                                avatarProps={
                                    'mode': 'text',
                                    'text': item['avatar_text'],
                                    'style':{'background':item['avatar_color']},
                                },
                            ) for item in comments_items
                        ], direction='vertical', style={'width':'100%'}),
                    ], style={"height":"400px", "overflowY":"scroll", 'width':'100%'}, headStyle={"display": "None"}),
                    fac.AntdCard(
                        [
                            fac.AntdRow(
                                [
                                    fac.AntdCol([fac.AntdAvatar(size=48, mode='text', text='F'),], span=2),
                                    fac.AntdCol([
                                            fac.AntdInput(
                                                id = "history_comment_input",
                                                mode='text-area',
                                                defaultValue='',
                                                autoSize={'minRows': 2, 'maxRows': 8},
                                                style={'width': '100%'},
                                            ),
                                    ], span=22),
                                ], style={'width': '100%', 'marginBottom': '10px'}
                            ),
                            fac.AntdRow([
                                fac.AntdCol([
                                    fac.AntdButton("Submit", id="submit-comment-btn",  type='primary'),
                                ]),
                            ], justify='end')
                        ], 
                        title="Addtional Comments",
                        # headStyle={"display": "None"},
                        style={'width':'100%'},
                        # extra=fac.AntdSwitch(
                        #         checkedChildren=fac.AntdText('Ctrl + V Paste', strong=True, style={'color': 'yellow'}),
                        #         unCheckedChildren=fac.AntdText('Disable Paste', strong=True, style={'color': 'black'}),
                        #         id='switch-paste-image'
                        #     ),
                    ),
                ], direction='vertical',style={'width':'100%'},),
            ], span=16)
        ], gutter=10,), 
    ])



fac.AntdSpace([
    fac.AntdComment(
        authorName=f"{item['user']}",
        publishTime={
            'value': f"{item['time_value']}",
            'format': 'YYYY-MM-DD hh:mm:ss',
        },
        commentContent=html.Div([
            html.P(item['comment']),  # The comment text
            item['image_group']  # The image group associated with the comment
        ]),
        locale='en-us',
        showLikeDislike=False,
        showReply=False,
        avatarProps={
            'mode': 'text',
            'text': item['avatar_text'],
            'style': {'background': item['avatar_color']},
        },
    ) for item in comments_items
], direction='vertical', style={'width': '100%'})
